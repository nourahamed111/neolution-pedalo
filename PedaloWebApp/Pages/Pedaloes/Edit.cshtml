@page
@model PedaloWebApp.Pages.Pedalos.EditModel
@{
    ViewData["Title"] = "Edit";
}

<h1>@ViewData["Title"]</h1>

<h4>Pedalo</h4>

<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div class="form-group">
                <label asp-for="Pedalo.Name" class="control-label"></label>
                <input asp-for="Pedalo.Name" id="nameInput" class="form-control" required pattern="[A-Za-z]+" />
             
            </div>
            <div class="form-group">
                <label asp-for="Pedalo.Color" class="control-label"></label>
                <select asp-for="Pedalo.Color" class="form-control" required>
                    <option value="Red">Red</option>
                    <option value="Blue">Blue</option>
                    <option value="Pink">Pink</option>
                    <option value="Green">Green</option>
                    <option value="Yellow">Yellow</option>
                </select>
            </div>
            <div class="form-group">
                <label asp-for="Pedalo.Capacity" class="control-label"></label>
                <input asp-for="Pedalo.Capacity" id="capacityInput" class="form-control" required pattern="\d+" />
                
            </div>
            <div class="form-group">
                <label asp-for="Pedalo.HourlyRate" class="control-label"></label>
                <input asp-for="Pedalo.HourlyRate" id="hourlyRateInput" class="form-control" required pattern="\d+" />
               
            </div>
            <div class="form-group">
                <input asp-for="Pedalo.PedaloId" type="hidden" />
                <input type="submit" value="Edit" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="Index">Back to List</a>
</div>
<script>
    //pedalo validation
    var capacityInput = document.getElementById('capacityInput');
    var hourlyRateInput = document.getElementById('hourlyRateInput');
    capacityInput.addEventListener('input', validateCapacity);
    hourlyRateInput.addEventListener('input', validateHourlyRate);

    function validateCapacity() {
        var capacity = capacityInput.value;
        if (isNaN(capacity) || parseInt(capacity) <= 0) {
            capacityInput.setCustomValidity('Capacity must be a positive numeric value.');
        } else {
            capacityInput.setCustomValidity('');
        }
    }
    function validateHourlyRate() {
        var hourlyRate = hourlyRateInput.value;
        if (isNaN(hourlyRate) || parseFloat(hourlyRate) <= 0) {
            hourlyRateInput.setCustomValidity('Hourly rate must be a positive numeric value.');
        } else {
            hourlyRateInput.setCustomValidity('');
        }
    }

</script>